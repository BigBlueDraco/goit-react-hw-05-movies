{"version":3,"file":"static/js/290.64d562df.chunk.js","mappings":"wQAWe,SAASA,IAAoB,IAAD,IACzC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,EAA6BH,EAASI,MAClCJ,EAASI,MAAMC,KACf,CAAEC,SAAU,SAAUC,OAAQ,IAF1BD,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAGlBC,EAAAA,EAAAA,YAAU,WACRC,GACD,IACD,IAAMA,EAAW,mCAAG,6GAEGC,EAAAA,EAAAA,gBAA0BZ,GAF7B,OAEVa,EAFU,OAGhBd,EAASc,GAHO,gDAKhBC,QAAQC,IAAR,MALgB,yDAAH,qDAQTC,EAAuDlB,EAAvDkB,MAAOC,EAAgDnB,EAAhDmB,aAAcC,EAAkCpB,EAAlCoB,SAAUC,EAAwBrB,EAAxBqB,OAAQC,EAAgBtB,EAAhBsB,YAC/C,OACE,8BACGtB,GACC,iCACE,mBAAQuB,QAAS,kBAAMjB,EAASI,EAAWC,EAA1B,EAAjB,sBACA,4BACE,gBACEa,IAAG,yCAAoCF,GACvCG,IAAI,GACJC,MAAM,WAER,iBAAKC,UAAU,YAAf,WACE,cAAGA,UAAU,mBAAb,SAAiCT,KACjC,cAAGS,UAAU,kBAAb,SAAgCR,KAChC,cAAGQ,UAAU,mBAAb,uBACA,cAAGA,UAAU,WAAb,SAAyBP,KACzB,cAAGO,UAAU,sBACb,wBACGN,GACCA,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,EAA3B,aAInB,4BACE,mDACA,SAAC,KAAD,CAAME,GAAG,OAAOvB,MAAK,UAAEJ,EAASI,aAAX,QAAoB,GAAzC,mBAGA,SAAC,KAAD,CAAMuB,GAAG,UAAUvB,MAAK,UAAEJ,EAASI,aAAX,QAAoB,GAA5C,yBAIF,SAAC,EAAAwB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,UAIJ,sCAIP,C,+GCtEYnB,EAAb,2HAKE,WAA0BoB,GAA1B,4EACOA,EADP,8CACqBC,GADrB,uBAEyBC,EAAAA,GAAAA,IAAA,UAAaC,KAAKC,SAAlB,OAA4BD,KAAKE,gBAAkB,CACxEC,OAAQ,CACNC,QAAS,mCACTP,MAAAA,KALN,uBAEUQ,EAFV,EAEUA,KAFV,kBAQSA,GART,gDALF,gIAeE,sGACyBN,EAAAA,GAAAA,IAAA,UAClBC,KAAKC,SADa,OACHD,KAAKM,kBACvB,CACEH,OAAQ,CACNC,QAAS,sCALjB,uBACUC,EADV,EACUA,KADV,kBASSA,GATT,gDAfF,sHA0BE,WAA6Bb,GAA7B,gGAAiCe,EAAjC,+BAAkD,GAC1CC,EAAWD,EAAiB,IAAMA,EAAiB,GAD3D,SAEyBR,EAAAA,GAAAA,IAAA,UAClBC,KAAKC,SADa,OACHD,KAAKS,cADF,YACmBjB,GADnB,OACwBgB,GAC7C,CACEL,OAAQ,CACNC,QAAS,sCANjB,uBAEUC,EAFV,EAEUA,KAFV,kBAUSA,GAVT,gDA1BF,8DAAa5B,EACJwB,QAAU,+BADNxB,EAEJ6B,iBAAmB,sBAFf7B,EAGJyB,eAAiB,gBAHbzB,EAIJgC,cAAgB,Q","sources":["pages/MovieDetailsPage/MovieDetailsPage.jsx","services/moviesAPI.js"],"sourcesContent":["import { Suspense, useEffect } from 'react';\nimport { useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { moviesApi } from 'services/moviesAPI';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { pathname, search } = location.state\n    ? location.state.from\n    : { pathname: '/index', search: '' };\n  useEffect(() => {\n    fetchMovies();\n  });\n  const fetchMovies = async () => {\n    try {\n      const resp = await moviesApi.fetchMoviesById(movieId);\n      setMovie(resp);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const { title, vote_average, overview, genres, poster_path } = movie;\n  return (\n    <>\n      {movie ? (\n        <>\n          <button onClick={() => navigate(pathname + search)}>Go back</button>\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt=\"\"\n              width=\"350px\"\n            />\n            <div className=\"film-info\">\n              <p className=\"film-info__title\">{title}</p>\n              <p className=\"film-info__text\">{vote_average}</p>\n              <p className=\"film-info__title\">Overview</p>\n              <p className=\"overview\">{overview}</p>\n              <p className=\"film-info__title\"></p>\n              <ul>\n                {genres &&\n                  genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n              </ul>\n            </div>\n          </div>\n          <div>\n            <p>Additional information</p>\n            <Link to=\"cast\" state={location.state ?? ''}>\n              Cast\n            </Link>\n            <Link to=\"reviews\" state={location.state ?? ''}>\n              Reviews\n            </Link>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <div>No data</div>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nexport class moviesApi {\n  static baseUrl = 'https://api.themoviedb.org/3';\n  static trendingEndPoint = '/trending/movie/day';\n  static searchEndPoint = '/search/movie';\n  static movieEndPoint = '/movie';\n  static async searchMovies(query) {\n    if (!query) return undefined;\n    const { data } = await axios.get(`${this.baseUrl}${this.searchEndPoint}`, {\n      params: {\n        api_key: 'fd0a7baec7e1722e7549dfbeea65227f',\n        query,\n      },\n    });\n    return data;\n  }\n  static async fetchTrendingMoviesToday() {\n    const { data } = await axios.get(\n      `${this.baseUrl}${this.trendingEndPoint}`,\n      {\n        params: {\n          api_key: 'fd0a7baec7e1722e7549dfbeea65227f',\n        },\n      }\n    );\n    return data;\n  }\n  static async fetchMoviesById(id, endpointOption = '') {\n    const endpoint = endpointOption ? '/' + endpointOption : '';\n    const { data } = await axios.get(\n      `${this.baseUrl}${this.movieEndPoint}/${id}${endpoint}`,\n      {\n        params: {\n          api_key: 'fd0a7baec7e1722e7549dfbeea65227f',\n        },\n      }\n    );\n    return data;\n  }\n}\n"],"names":["MovieDetailsPage","useState","movie","setMovie","movieId","useParams","location","useLocation","navigate","useNavigate","state","from","pathname","search","useEffect","fetchMovies","moviesApi","resp","console","log","title","vote_average","overview","genres","poster_path","onClick","src","alt","width","className","map","id","name","to","Suspense","fallback","query","undefined","axios","this","baseUrl","searchEndPoint","params","api_key","data","trendingEndPoint","endpointOption","endpoint","movieEndPoint"],"sourceRoot":""}