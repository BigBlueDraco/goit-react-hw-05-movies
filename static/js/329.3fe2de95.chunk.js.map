{"version":3,"file":"static/js/329.3fe2de95.chunk.js","mappings":"oMAEaA,EAAiB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAWC,EAAc,EAAlBC,GAChCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACE,SAAC,KAAD,CACEC,GACEF,EAASG,SAASC,SAAS,UAA3B,UACON,GADP,iBAEcA,GAEhBO,MAAO,CAAEC,KAAMN,GANjB,SAQGH,KAIR,EChBYU,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,wBACGA,GACCA,EAAOC,KAAI,gBAAGV,EAAH,EAAGA,GAAIF,EAAP,EAAOA,MAAP,OACT,SAACD,EAAD,CAAyBC,MAAOA,EAAOE,GAAIA,GAAtBA,EADZ,KAKlB,C,qICTYW,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1B,GAA2BC,EAAAA,EAAAA,YAA3B,eAAOC,EAAP,KAAcC,EAAd,KACA,OACE,kBACEC,OAAO,GACPC,SAAU,SAAAC,GACRN,EAAaE,EACd,EAJH,WAME,8CAEE,kBACEK,KAAK,OACLC,KAAK,QACLC,SAAU,SAAAH,GACRH,EAAUG,EAAEI,OAAOC,MACpB,QAIL,mBAAQJ,KAAK,SAAb,sBAGL,E,kBClBc,SAASK,IACtB,OAA4BX,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAegB,EAAf,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,gBACAC,EAAAA,EAAAA,YAAU,WACRC,GACD,IAED,IAAMA,EAAW,mCAAG,+GAEGC,EAAAA,EAAAA,aAAuBH,EAAaI,IAAI,UAF3C,UAEVC,EAFU,wDAIRC,EAAYD,EAAZC,QACRR,EAAUQ,GALM,kDAOhBC,QAAQC,IAAR,MAPgB,0DAAH,qDAUjB,OACE,iCACE,SAACxB,EAAD,KACA,SAACH,EAAA,EAAD,CAAYC,OAAQA,MAGzB,C,+GC5BYqB,EAAb,2HAKE,WAA0BhB,GAA1B,4EACOA,EADP,8CACqBsB,GADrB,uBAEyBC,EAAAA,GAAAA,IAAA,UAAaC,KAAKC,SAAlB,OAA4BD,KAAKE,gBAAkB,CACxEC,OAAQ,CACNC,QAAS,mCACT5B,MAAAA,KALN,uBAEU6B,EAFV,EAEUA,KAFV,kBAQSA,GART,gDALF,gIAeE,sGACyBN,EAAAA,GAAAA,IAAA,UAClBC,KAAKC,SADa,OACHD,KAAKM,kBACvB,CACEH,OAAQ,CACNC,QAAS,sCALjB,uBACUC,EADV,EACUA,KADV,kBASSA,GATT,gDAfF,sHA0BE,WAA6B3C,GAA7B,gGAAiC6C,EAAjC,+BAAkD,GAC1CC,EAAWD,EAAiB,IAAMA,EAAiB,GAD3D,SAEyBR,EAAAA,GAAAA,IAAA,UAClBC,KAAKC,SADa,OACHD,KAAKS,cADF,YACmB/C,GADnB,OACwB8C,GAC7C,CACEL,OAAQ,CACNC,QAAS,sCANjB,uBAEUC,EAFV,EAEUA,KAFV,kBAUSA,GAVT,gDA1BF,8DAAab,EACJS,QAAU,+BADNT,EAEJc,iBAAmB,sBAFfd,EAGJU,eAAiB,gBAHbV,EAIJiB,cAAgB,Q","sources":["components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","components/Searchebar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx","services/moviesAPI.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesListItem = ({ title, id: movieId }) => {\n  const location = useLocation();\n  return (\n    <li>\n      <Link\n        to={\n          location.pathname.includes('movies')\n            ? `${movieId}`\n            : `movies/${movieId}`\n        }\n        state={{ from: location }}\n      >\n        {title}\n      </Link>\n    </li>\n  );\n};\n","import { MoviesListItem } from 'components/MoviesListItem/MoviesListItem';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies &&\n        movies.map(({ id, title }) => (\n          <MoviesListItem key={id} title={title} id={id} />\n        ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\n\nexport const Searchbar = ({ handleSubmit }) => {\n  const [query, setQuerry] = useState();\n  return (\n    <form\n      action=\"\"\n      onSubmit={e => {\n        handleSubmit(query);\n      }}\n    >\n      <label>\n        Searche movie\n        <input\n          type=\"text\"\n          name=\"query\"\n          onChange={e => {\n            setQuerry(e.target.value);\n          }}\n        />\n      </label>\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Searchbar } from 'components/Searchebar/Searchbar';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { moviesApi } from 'services/moviesAPI';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  useEffect(() => {\n    fetchMovies();\n  });\n\n  const fetchMovies = async () => {\n    try {\n      const resp = await moviesApi.searchMovies(searchParams.get('query'));\n      if (!resp) return;\n      const { results } = resp;\n      setMovies(results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <>\n      <Searchbar />\n      <MoviesList movies={movies} />\n    </>\n  );\n}\n","import axios from 'axios';\n\nexport class moviesApi {\n  static baseUrl = 'https://api.themoviedb.org/3';\n  static trendingEndPoint = '/trending/movie/day';\n  static searchEndPoint = '/search/movie';\n  static movieEndPoint = '/movie';\n  static async searchMovies(query) {\n    if (!query) return undefined;\n    const { data } = await axios.get(`${this.baseUrl}${this.searchEndPoint}`, {\n      params: {\n        api_key: 'fd0a7baec7e1722e7549dfbeea65227f',\n        query,\n      },\n    });\n    return data;\n  }\n  static async fetchTrendingMoviesToday() {\n    const { data } = await axios.get(\n      `${this.baseUrl}${this.trendingEndPoint}`,\n      {\n        params: {\n          api_key: 'fd0a7baec7e1722e7549dfbeea65227f',\n        },\n      }\n    );\n    return data;\n  }\n  static async fetchMoviesById(id, endpointOption = '') {\n    const endpoint = endpointOption ? '/' + endpointOption : '';\n    const { data } = await axios.get(\n      `${this.baseUrl}${this.movieEndPoint}/${id}${endpoint}`,\n      {\n        params: {\n          api_key: 'fd0a7baec7e1722e7549dfbeea65227f',\n        },\n      }\n    );\n    return data;\n  }\n}\n"],"names":["MoviesListItem","title","movieId","id","location","useLocation","to","pathname","includes","state","from","MoviesList","movies","map","Searchbar","handleSubmit","useState","query","setQuerry","action","onSubmit","e","type","name","onChange","target","value","MoviesPage","setMovies","useSearchParams","searchParams","useEffect","fetchMovies","moviesApi","get","resp","results","console","log","undefined","axios","this","baseUrl","searchEndPoint","params","api_key","data","trendingEndPoint","endpointOption","endpoint","movieEndPoint"],"sourceRoot":""}